// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PetDoctor.Infrastructure;

#nullable disable

namespace PetDoctor.ReadStore.Migrations.Migrations
{
    [DbContext(typeof(PetDoctorContext))]
    partial class PetDoctorContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("PetDoctor.Domain.Aggregates.Appointments.AppointmentSnapshot", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AttendingVeterinarianId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CancellationReason")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("ReasonForVisit")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("RejectionReason")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<DateTimeOffset>("ScheduledOn")
                        .HasColumnType("datetimeoffset(7)");

                    b.Property<int>("State")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("AppointmentSnapshots", "dbo");
                });

            modelBuilder.Entity("PetDoctor.Domain.Aggregates.Appointments.AppointmentSnapshot", b =>
                {
                    b.OwnsOne("PetDoctor.Domain.Aggregates.Appointments.Owner", "Owner", b1 =>
                        {
                            b1.Property<Guid>("AppointmentSnapshotId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Email")
                                .IsRequired()
                                .HasMaxLength(100)
                                .HasColumnType("nvarchar(100)")
                                .HasColumnName("OwnerEmail");

                            b1.Property<string>("FirstName")
                                .IsRequired()
                                .HasMaxLength(100)
                                .HasColumnType("nvarchar(100)")
                                .HasColumnName("OwnerFirstName");

                            b1.Property<string>("LastName")
                                .IsRequired()
                                .HasMaxLength(100)
                                .HasColumnType("nvarchar(100)")
                                .HasColumnName("OwnerLastName");

                            b1.Property<string>("Phone")
                                .IsRequired()
                                .HasMaxLength(25)
                                .HasColumnType("nvarchar(25)")
                                .HasColumnName("OwnerPhone");

                            b1.HasKey("AppointmentSnapshotId");

                            b1.ToTable("AppointmentSnapshots", "dbo");

                            b1.WithOwner()
                                .HasForeignKey("AppointmentSnapshotId");
                        });

                    b.OwnsOne("PetDoctor.Domain.Aggregates.Appointments.Pet", "Pet", b1 =>
                        {
                            b1.Property<Guid>("AppointmentSnapshotId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Breed")
                                .IsRequired()
                                .HasMaxLength(100)
                                .HasColumnType("nvarchar(100)")
                                .HasColumnName("PetBreed");

                            b1.Property<DateTimeOffset>("DateOfBirth")
                                .HasColumnType("datetimeoffset(7)")
                                .HasColumnName("PetDateOfBirth");

                            b1.Property<string>("Name")
                                .IsRequired()
                                .HasMaxLength(100)
                                .HasColumnType("nvarchar(100)")
                                .HasColumnName("PetName");

                            b1.HasKey("AppointmentSnapshotId");

                            b1.ToTable("AppointmentSnapshots", "dbo");

                            b1.WithOwner()
                                .HasForeignKey("AppointmentSnapshotId");
                        });

                    b.Navigation("Owner");

                    b.Navigation("Pet");
                });
#pragma warning restore 612, 618
        }
    }
}
